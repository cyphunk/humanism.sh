#!/usr/bin/env bash
# inspired by https://github.com/Russell91/sshrc

SSHHOME=${SSHHOME:=~}
HUMANISM_BASE=${HUMANISM_BASE:="$SSHHOME"}

#CARRYFILES="humanism.sh humanism.test.sh ap.linux-apt ap.osx-brew ap.freebsd-pkg dbg"
CARRYFILES="."
EXCLUDEFILES=$"
    --exclude .git
    --exclude .gitignore
    --exclude test
    --exclude issues
    --exclude examples
    --exclude README.md
    --exclude LICENSE
    --exclude .prep
    --exclude sshrc2
"

#
# CHECK LOCAL REQUIREMENTS
#
LOCALERR=0
if [ -f "$HUMANISM_BASE/humanism.sh" ]; then
    if ! command -v tar >/dev/null 2>&1; then
        echo >&2 'sshrc: tar required on localhost'
        LOCALERR=1
    else
        SIZE=$(tar czf - $EXCLUDEFILES -h -C $HUMANISM_BASE $CARRYFILES | wc -c)
        if [ $SIZE -gt 65536 ]; then
            echo >&2 $'sshrc: files must be less than 64kb\ncurrent size: '$SIZE' bytes'
            LOCALERR=1
        fi
    fi
    if command -v xxd >/dev/null 2>&1; then
        pack_local () {
             xxd -p
        }
    elif command -v od >/dev/null 2>&1; then
        pack_local () {
            od -v -t x1 | awk '{$1=""; print}' | sed 's/ //g'
            # -t x1 for byte order
            # -w30 for xxd-r-p compat but -w not support on Unix
        }
    else
        echo >&2 'sshrc: od or xxd required on localhost';
        LOCALERR=1
    fi
else
    echo >&2 "sshrc: no such file $HUMANISM_BASE/humanism.sh"
    LOCALERR=1
fi

#
# PACKUP LOCAL ENV
#
PACKEDHUMANISM=""
PACKEDSSHRC=""
if [ $LOCALERR -eq 0 ]; then
    PACKEDHUMANISM=$(tar czf - $EXCLUDEFILES -h -C $HUMANISM_BASE $CARRYFILES | pack_local)
    PACKEDSSHRC=$(cat "$0" | pack_local)
    PACKEDPUBKEYS=$(cat $SSHHOME/.ssh/id_rsa.pub 2>/dev/null | pack_local)
fi

#
# PREPARE SSH EXEC SCRIPT TO CARRY ENV
#
COPYSCRIPT=$"
CARRY=1
# HUMANISM_BASE wont show until after we login
# so to check if it exists we grep rc files instead
if grep humanism.sh .bashrc >/dev/null 2>&1 || \
   grep humanism.sh .profile >/dev/null 2>&1 || \
   grep humanism.sh /etc/bashrc >/dev/null 2>&1 || \
   grep humanism.sh /etc/profile >/dev/null 2>&1 || \
   grep humanism.sh .zshrc >/dev/null 2>&1 || \
   grep humanism.sh /etc/zshenv >/dev/null 2>&1; then
    echo >&2 'sshrc: humanism found'
    CARRY=0
fi

DESIREDSHELL=\$(command -v $(basename $SHELL) || command -v bash || command -v ash || command -v sh)

if [ \$CARRY -eq 1 ]; then
    # unpack commands on remote/target
    if command -v tar >/dev/null 2>&1; then
        if command -v sed >/dev/null 2>&1; then
            unpack_remote () {
                echo -en \$(echo -n \"\$*\" | tr -d '\n' | sed 's/ //g' | sed 's/../\\\\x&/g')
            }
        elif command -v xxd >/dev/null 2>&1; then
            unpack_remote () {
                echo >&2 'remote unpack with xxd'
                echo -n \"\$*\" | xxd -r -p
            }
        else
            echo >&2 'sshrc: sed or xxd required on remote';
            CARRY=0
        fi
    else
        echo >&2 'sshrc: tar required on remote'
        CARRY=0
    fi
fi

if [ \$CARRY -eq 0 ]; then
    echo >&2 'sshrc: skipping enviornment carry to remote'
    #if [ -e /etc/motd ]; then cat /etc/motd; fi
    \$DESIREDSHELL
else
    #if [ -e /etc/motd ]; then cat /etc/motd; fi
    SSHHOME=\$(mktemp -d -t .$(whoami).sshrc.XXXXXX)
    if [ \"\$SSHHOME\" == '' ]; then
        mkdir ./.humanism
        SSHHOME=./.humanism
    fi
    #export SSHRCCLEANUP=\$SSHHOME
    #trap \"rm -rf \$SSHRCCLEANUP; exit\" 0

    echo 'sshrc: carry sshrc'
    unpack_remote \"$PACKEDSSHRC\" > \$SSHHOME/sshrc \
    && chmod +x \$SSHHOME/sshrc \
    && echo 'sshrc: set authorized_keys' \
    && export PUBKEYS=\$(unpack_remote \"$PACKEDPUBKEYS\") \
    && (test ! -e    ~/.ssh \
        && mkdir     ~/.ssh \
        && chmod 700 ~/.ssh; \
        test ! -e    ~/.ssh/authorized_keys \
        && touch     ~/.ssh/authorized_keys \
        && chmod 600 ~/.ssh/authorized_keys; \
        grep -q \"\$PUBKEYS\" ~/.ssh/authorized_keys \
        && echo 'sshrc: already authorized' \
        || (echo 'sshrc: new authorized_key' \
            && echo \"\$PUBKEYS\" >> ~/.ssh/authorized_keys); \
        exit 0) \
    && echo sshrc: carry humanism.tar.gz to \\\"\$SSHHOME\\\" \
    && unpack_remote \"$PACKEDHUMANISM\" | tar xz -C \$SSHHOME -f - \
    && chmod 770 \$SSHHOME \
    && export SSHHOME=\$SSHHOME \
    && echo 'sshrc: create sshrc.bashrc' \
    && PACKEDSSHRCBASHRC=$'"$(
cat << 'EOF' | pack_local
    if [ -e /etc/bash.bashrc ]; then source /etc/bash.bashrc; fi
    if [ -e ~/.bashrc ]; then source ~/.bashrc; fi
    export PATH=$PATH:$SSHHOME
    source $SSHHOME/humanism.sh;
    if [ -f $SSHHOME/myrc ]; then
        source "$SSHHOME/myrc"
    fi
EOF
    )"' \
    && unpack_remote \"\$PACKEDSSHRCBASHRC\" > \$SSHHOME/sshrc.bashrc \
    && \$DESIREDSHELL --rcfile \$SSHHOME/sshrc.bashrc \
    || ( echo 'humanism.sh carry failed' && \$DESIREDSHELL )
fi
"

#
# MAIN
#
if [ $LOCALERR -eq 0 ]; then
    # DEBUG=1 outputs resulting carry blog to /tmp for review
    test "$DEBUG" && echo "$COPYSCRIPT" > /tmp/sshrc.debug
    # -t force pseudo tty
    ssh -t $@ "$COPYSCRIPT"
else
    echo >&2 "sshrc: local requirements missing. fall back to normal ssh"
    ssh $@
fi
